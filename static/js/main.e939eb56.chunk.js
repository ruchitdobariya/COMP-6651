(this["webpackJsonpalgo-project"]=this["webpackJsonpalgo-project"]||[]).push([[0],{217:function(e,t,s){e.exports=s(373)},224:function(e,t,s){},225:function(e,t,s){},373:function(e,t,s){"use strict";s.r(t);var o=s(0),r=s.n(o),a=s(201),n=s.n(a),i=(s(224),s(225),s(202)),l=s.n(i),h=s(379),c=s(381),p=s(382),g=s(378),d=s(380);var u=class{constructor(){this.num_vertex=0,this.num_edge=0,this.chromatic_number=2,this.adj=new Map,this.coloring=new Map}print(){console.log("============= Graph ==============");for(const[e,t]of this.adj.entries())console.log("".concat(e," (").concat(this.coloring.get(e),"): -> ").concat(t.join(", ")," "));console.log("==================================")}getVisGraph(){}};let f={1:"#FFA500",2:"#97C30A",3:"#1FBED6",4:"#ffc0cb",5:"#FFFF00",6:"#00FF00",7:"#808080",8:"#FF0303",9:"#9400D3",10:"#008080"};const m=e=>(f[e]||(f[e]="#"+Math.floor(16777215*Math.random()).toString(16).padStart(6,"0")),f[e]);var b=class{constructor(){this.g=new u,this.visGraph={nodes:[],edges:[]},this.noOfEdges=[],this.visGraphHistory={nodes:[],edges:[]},this.noOfEdgesHistory=[],this.maxColor=0}get_partition(e){const t=new Map,s=[new Set,new Set],o=[e];let r=0;for(t.set(e,!0);o.length>0;){const e=o.length;for(let a=0;a<e;a++){const e=o.shift();s[r].add(e);for(const s of this.g.adj.get(e))t.get(s)||(t.set(s,!0),o.push(s))}r^=1}return s}solve(e,t){this.g.num_vertex++,this.g.adj.set(e,[]);for(const r of t)this.g.adj.get(r).push(e),this.g.adj.get(e).push(r),this.g.num_edge++;const s=this.get_partition(e);let o=1;for(const r of s){if(r.has(e))continue;const t=new Set;for(const e of r)t.add(this.g.coloring.get(e));for(;t.has(o);)o++}this.g.coloring.set(e,o),this.maxColor=Math.max(o,this.maxColor),this.visGraph.nodes.push({id:e,label:"".concat(e),color:{background:m(o),border:"black",hover:{background:m(o),border:"black"},highlight:{background:m(o),border:"black"}}});for(const r of t)this.visGraph.edges.push({from:e,to:r});return this.noOfEdges.push(t.length),console.debug(e,o),this.g}pop(){this.visGraphHistory.nodes.push(this.visGraph.nodes.pop());let e=this.noOfEdges.pop();this.noOfEdgesHistory.push(e);for(let t=0;t<e;t++)this.visGraphHistory.edges.push(this.visGraph.edges.pop());return this.visGraph}pushBack(){this.visGraph.nodes.push(this.visGraphHistory.nodes.pop());let e=this.noOfEdgesHistory.pop();this.noOfEdges.push(e);for(let t=0;t<e;t++)this.visGraph.edges.push(this.visGraphHistory.edges.pop());return this.visGraph}getVisGraph(){return this.visGraph}};var v=class{constructor(){this.g=new u,this.visGraph={nodes:[],edges:[]},this.noOfEdges=[],this.visGraphHistory={nodes:[],edges:[]},this.noOfEdgesHistory=[],this.maxColor=0}solve(e,t){const s=new Set;this.g.num_vertex++,this.g.adj.set(e,[]);for(const r of t)s.add(this.g.coloring.get(r)),this.g.adj.get(r).push(e),this.g.adj.get(e).push(r),this.g.num_edge++;let o=1;for(;s.has(o);)o++;this.g.coloring.set(e,o),this.maxColor=Math.max(o,this.maxColor),this.visGraph.nodes.push({id:e,label:"".concat(e),color:{background:m(o),border:"black",hover:{background:m(o),border:"black"},highlight:{background:m(o),border:"black"}}});for(const r of t)this.visGraph.edges.push({from:e,to:r});return this.noOfEdges.push(t.length),console.debug(e,o),this.g}pop(){this.visGraphHistory.nodes.push(this.visGraph.nodes.pop());let e=this.noOfEdges.pop();this.noOfEdgesHistory.push(e);for(let t=0;t<e;t++)this.visGraphHistory.edges.push(this.visGraph.edges.pop());return this.visGraph}pushBack(){this.visGraph.nodes.push(this.visGraphHistory.nodes.pop());let e=this.noOfEdgesHistory.pop();this.noOfEdges.push(e);for(let t=0;t<e;t++)this.visGraph.edges.push(this.visGraphHistory.edges.pop());return this.visGraph}getVisGraph(){return this.visGraph}};function E(e){return Math.floor(Math.random()*e)}function G(e,t,s){if(t!=s){for(let o=0;o<e.length;o++)if(e[o][0]===t&&e[o][1]===s||e[o][0]===s&&e[o][1]===t)return;s<t?e.push([s,t]):e.push([t,s])}}var y=function(e,t,s){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"cbip",r=[],a=[];for(let h=0;h<t;h++)r.push([]);for(let h=1;h<=t;h++)r[h-1].push(h);for(let h=t+1;h<=e;h++)r[E(t)].push(h);for(let h=0;h<r.length;h++)for(let e of r[h]){for(let t=0;t<r.length;t++){if(r[t].includes(e))continue;G(a,e,r[t][E(r[t].length)])}for(let t=0;t<r.length;t++)if(!r[t].includes(e))for(let o of r[t])Math.random()<=s&&G(a,e,o)}console.log(r),console.log(a),console.log(o);let n=new u,i="cbip"===o?new b(n):new v(n),l=new Set;for(let h=1;h<=e;h++){let e=[];for(let t=0;t<a.length;t++)if(a[t][0]===h||a[t][1]===h){let s=a[t][a[t][0]===h?1:0];l.has(s)&&e.push(s)}l.add(h),console.log(h,e),i.solve(h,e).print()}return i};let O=y(5,2);const{Option:C}=h.a;var k=function(){const[e,t]=Object(o.useState)(JSON.parse(JSON.stringify(O.visGraph))),[s,a]=Object(o.useState)(5),[n,i]=Object(o.useState)(2),[u,f]=Object(o.useState)("cbip"),[m,b]=Object(o.useState)(1*O.maxColor/n),[v,E]=Object(o.useState)(!0),[G,k]=Object(o.useState)(.5);return r.a.createElement("div",{className:"App"},r.a.createElement("div",null,r.a.createElement("h5",null,"Competitive Ratio = ",m)),r.a.createElement("div",{className:"Graph-Wrapper"},r.a.createElement(l.a,{key:e.noOfEdges,graph:e,options:{edges:{color:"#333333",width:1,arrows:{to:{enabled:!1},middle:{enabled:!1},from:{enabled:!1}}},nodes:{label:"Node label",borderWidth:2,borderWidthSelected:4,font:{size:16,color:"#000000"},color:{border:"#000000"}},interaction:{hover:!0,navigationButtons:!0,zoomView:!1,dragView:!1},physics:{enabled:v,barnesHut:{gravitationalConstant:-2e3,centralGravity:.5,springLength:100}},height:"500px"},getNetwork:e=>{}})),r.a.createElement("div",{className:"controller-bar"},r.a.createElement(c.a,{style:{backgroundColor:"#159895",color:"#fff",margin:"20px"},disabled:1==O.visGraph.nodes.length,onClick:()=>{t(JSON.parse(JSON.stringify(O.pop())))}},"Previous"),r.a.createElement(c.a,{style:{backgroundColor:"#159895",color:"#fff",margin:"20px"},disabled:!O.visGraphHistory.nodes.length,onClick:()=>{t(JSON.parse(JSON.stringify(O.pushBack())))}},"Next"),"Physics",r.a.createElement(p.a,{style:{margin:"10px"},checkedChildren:"On",unCheckedChildren:"Off",defaultChecked:!0,onChange:e=>{E(e)}})),r.a.createElement("div",{className:"button-bar"},r.a.createElement(g.a,{onFinish:()=>{},layout:"inline"},r.a.createElement(g.a.Item,{label:"Number of Vertices (N)",name:"n",rules:[{required:!0,message:"Please enter n."}]},r.a.createElement(d.a,{min:1,max:100,defaultValue:5,onChange:e=>{a(e)}})),r.a.createElement(g.a.Item,{label:"Chromatic Number (K)",name:"k",rules:[{required:!0,message:"Please enter k."}]},r.a.createElement(d.a,{min:2,max:50,defaultValue:2,onChange:e=>{i(e)}})),r.a.createElement(g.a.Item,{name:"algorithm",label:"Algorithm",rules:[{required:!0,message:"Please select graph type."}]},r.a.createElement(h.a,{placeholder:"Select Algorithm",defaultValue:"CBIP",onChange:e=>{f(e)}},r.a.createElement(C,{value:"firstfit"},"First Fit"),r.a.createElement(C,{value:"cbip"},"CBIP"))),r.a.createElement(g.a.Item,{label:"Probability of adding edge (p)",name:"p",rules:[{required:!0,message:"Please enter p."}]},r.a.createElement(d.a,{min:.01,max:1,step:.01,defaultValue:.5,onChange:e=>{k(e)}})),r.a.createElement(g.a.Item,null,r.a.createElement(c.a,{type:"primary",onClick:()=>{"cbip"===u&&n>2?alert("CBIP is only supported for k = 2."):null!==s&&null!==n?n>s?alert("K can not be greater than N."):(O=y(s,n,G,u),t(JSON.parse(JSON.stringify(O.visGraph))),b(1*O.maxColor/n)):alert("Please enter N and K.")}},"Solve for a Random Graph")))))};var S=e=>{e&&e instanceof Function&&s.e(3).then(s.bind(null,383)).then(t=>{let{getCLS:s,getFID:o,getFCP:r,getLCP:a,getTTFB:n}=t;s(e),o(e),r(e),a(e),n(e)})},x=s(213),w=s(7);n.a.createRoot(document.getElementById("root")).render(r.a.createElement(x.a,null,r.a.createElement(w.c,null,r.a.createElement(w.a,{path:"/",element:r.a.createElement(k,null)})))),S()}},[[217,1,2]]]);
//# sourceMappingURL=main.e939eb56.chunk.js.map